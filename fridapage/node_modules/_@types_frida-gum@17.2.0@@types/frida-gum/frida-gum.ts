declare function hexdump(target:ArrayBuffer|NativePointerValue,options?:HexdumpOptions):string;interface HexdumpOptions{offset?:number|undefined;length?:number|undefined;header?:boolean|undefined;ansi?:boolean|undefined}declare function int64(value:string|number):Int64;declare function uint64(value:string|number):UInt64;declare function ptr(value:string|number):NativePointer;declare const NULL:NativePointer;declare function recv(callback:MessageCallback):MessageRecvOperation;declare function recv(type:string,callback:MessageCallback):MessageRecvOperation;interface MessageCallback{(message:any,data:ArrayBuffer|null):void}interface MessageRecvOperation{wait():void}declare function send(message:any,data?:ArrayBuffer|number[]|null):void;declare function setTimeout(func:ScheduledCallback,delay?:number,...params:any[]):TimeoutId;declare function clearTimeout(id:TimeoutId):void;type TimeoutId=number;declare function setInterval(func:ScheduledCallback,delay:number,...params:any[]):IntervalId;declare function clearInterval(id:IntervalId):void;type IntervalId=number;declare function setImmediate(func:ScheduledCallback,...params:any[]):ImmediateId;declare function clearImmediate(id:ImmediateId):void;type ImmediateId=number;type ScheduledCallback=(...params:any[])=>void;declare namespace rpc{let exports:RpcExports}interface RpcExports{[name:string]:AnyFunction}type AnyFunction=(...args:any[])=>any;declare namespace Frida{const version:string;const heapSize:number}declare namespace Script{const runtime:ScriptRuntime;function nextTick(func:ScheduledCallback,...params:any[]):void;function pin():void;function unpin():void;function bindWeak(target:any,callback:WeakRefCallback):WeakRefId;function unbindWeak(id:WeakRefId):void;function setGlobalAccessHandler(handler:GlobalAccessHandler|null):void}type ScriptRuntime="DUK"|"V8";type WeakRefCallback=()=>void;type WeakRefId=number;interface GlobalAccessHandler{enumerate():string[];get(property:string):any}declare namespace Process{const id:number;const arch:Architecture;const platform:Platform;const pageSize:number;const pointerSize:number;const codeSigningPolicy:CodeSigningPolicy;function isDebuggerAttached():boolean;function getCurrentThreadId():ThreadId;function enumerateThreads():ThreadDetails[];function findModuleByAddress(address:NativePointerValue):Module|null;function getModuleByAddress(address:NativePointerValue):Module;function findModuleByName(name:string):Module|null;function getModuleByName(name:string):Module;function enumerateModules():Module[];function findRangeByAddress(address:NativePointerValue):RangeDetails|null;function getRangeByAddress(address:NativePointerValue):RangeDetails;function enumerateRanges(specifier:PageProtection|EnumerateRangesSpecifier):RangeDetails[];function enumerateMallocRanges():RangeDetails[];function setExceptionHandler(callback:ExceptionHandlerCallback):void}declare class Module{name:string;base:NativePointer;size:number;path:string;enumerateImports():ModuleImportDetails[];enumerateExports():ModuleExportDetails[];enumerateSymbols():ModuleSymbolDetails[];enumerateRanges(protection:PageProtection):RangeDetails[];findExportByName(exportName:string):NativePointer|null;getExportByName(exportName:string):NativePointer;static load(name:string):Module;static ensureInitialized(name:string):void;static findBaseAddress(name:string):NativePointer|null;static getBaseAddress(name:string):NativePointer;static findExportByName(moduleName:string|null,exportName:string):NativePointer|null;static getExportByName(moduleName:string|null,exportName:string):NativePointer}declare class ModuleMap{constructor(filter?:ModuleMapFilter);has(address:NativePointerValue):boolean;find(address:NativePointerValue):Module|null;get(address:NativePointerValue):Module;findName(address:NativePointerValue):string|null;getName(address:NativePointerValue):string;findPath(address:NativePointerValue):string|null;getPath(address:NativePointerValue):string;update():void;values():Module[]}type ModuleMapFilter=(m:Module)=>boolean;declare namespace Memory{function scan(address:NativePointerValue,size:number|UInt64,pattern:string|MatchPattern,callbacks:MemoryScanCallbacks):Promise<void>;function scanSync(address:NativePointerValue,size:number|UInt64,pattern:string|MatchPattern):MemoryScanMatch[];function alloc(size:number|UInt64,options?:MemoryAllocOptions):NativePointer;function allocUtf8String(str:string):NativePointer;function allocUtf16String(str:string):NativePointer;function allocAnsiString(str:string):NativePointer;function copy(dst:NativePointerValue,src:NativePointerValue,n:number|UInt64):void;function dup(address:NativePointerValue,size:number|UInt64):NativePointer;function protect(address:NativePointerValue,size:number|UInt64,protection:PageProtection):boolean;function patchCode(address:NativePointerValue,size:number|UInt64,apply:MemoryPatchApplyCallback):void}interface MemoryRange{base:NativePointer;size:number}declare namespace MemoryAccessMonitor{function enable(ranges:MemoryAccessRange|MemoryAccessRange[],callbacks:MemoryAccessCallbacks):void;function disable():void}interface MemoryAccessRange{base:NativePointer;size:number}interface MemoryAccessCallbacks{onAccess:(details:MemoryAccessDetails)=>void}interface MemoryAccessDetails{operation:MemoryOperation;from:NativePointer;address:NativePointer;rangeIndex:number;pageIndex:number;pagesCompleted:number;pagesTotal:number}declare namespace Thread{function backtrace(context?:CpuContext,backtracer?:Backtracer):NativePointer[];function sleep(delay:number):void}declare class Backtracer{static ACCURATE:Backtracer;static FUZZY:Backtracer}type Architecture=|"ia32"|"x64"|"arm"|"arm64"|"mips";type Platform=|"windows"|"darwin"|"linux"|"qnx";type CodeSigningPolicy="optional"|"required";type PageProtection=string;type ThreadId=number;type ThreadState=|"running"|"stopped"|"waiting"|"uninterruptible"|"halted";interface ThreadDetails{id:ThreadId;state:ThreadState;context:CpuContext}interface KernelModuleDetails{name:string;base:UInt64;size:number}interface ModuleImportDetails{type?:ModuleImportType|undefined;name:string;module?:string|undefined;address?:NativePointer|undefined;slot?:NativePointer|undefined}interface ModuleExportDetails{type:ModuleExportType;name:string;address:NativePointer}interface ModuleSymbolDetails{isGlobal:boolean;type:ModuleSymbolType;section?:ModuleSymbolSectionDetails|undefined;name:string;address:NativePointer;size?:number|undefined}type ModuleImportType="function"|"variable";type ModuleExportType="function"|"variable";type ModuleSymbolType=|"unknown"|"section"|"undefined"|"absolute"|"prebound-undefined"|"indirect"|"object"|"function"|"file"|"common"|"tls";interface ModuleSymbolSectionDetails{id:string;protection:PageProtection}interface RangeDetails{base:NativePointer;size:number;protection:PageProtection;file?:FileMapping|undefined}interface KernelRangeDetails{base:UInt64;size:number;protection:PageProtection}interface KernelModuleRangeDetails{name:string;base:UInt64;size:number;protection:PageProtection}interface FileMapping{path:string;offset:number;size:number}interface EnumerateRangesSpecifier{protection:PageProtection;coalesce:boolean}type ExceptionHandlerCallback=(exception:ExceptionDetails)=>boolean|void;interface ExceptionDetails{type:ExceptionType;address:NativePointer;memory?:ExceptionMemoryDetails|undefined;context:CpuContext;nativeContext:NativePointer}type ExceptionType=|"abort"|"access-violation"|"guard-page"|"illegal-instruction"|"stack-overflow"|"arithmetic"|"breakpoint"|"single-step"|"system";interface ExceptionMemoryDetails{operation:MemoryOperation;address:NativePointer}type MemoryOperation="read"|"write"|"execute";interface EnumerateCallbacks<T>{onMatch:(item:T)=>void|EnumerateAction;onComplete:()=>void}type EnumerateAction="stop";interface MemoryScanCallbacks{onMatch:(address:NativePointer,size:number)=>void|EnumerateAction;onError?:((reason:string)=>void)|undefined;onComplete?:()=>void}interface MemoryScanMatch{address:NativePointer;size:number}interface KernelMemoryScanCallbacks{onMatch:(address:UInt64,size:number)=>void|EnumerateAction;onError?:((reason:string)=>void)|undefined;onComplete?:()=>void}interface KernelMemoryScanMatch{address:UInt64;size:number}type MemoryAllocOptions=Record<any,never>|MemoryAllocNearOptions;interface MemoryAllocNearOptions{near:NativePointer;maxDistance:number}type MemoryPatchApplyCallback=(code:NativePointer)=>void;declare class Int64{constructor(v:string|number|Int64);add(v:Int64|number|string):Int64;sub(v:Int64|number|string):Int64;and(v:Int64|number|string):Int64;or(v:Int64|number|string):Int64;xor(v:Int64|number|string):Int64;shl(v:Int64|number|string):Int64;shr(v:Int64|number|string):Int64;not():Int64;compare(v:Int64|number|string):number;equals(v:Int64|number|string):boolean;toNumber():number;toString(radix?:number):string;toJSON():string;valueOf():number}declare class UInt64{constructor(v:string|number|UInt64);add(v:UInt64|number|string):UInt64;sub(v:UInt64|number|string):UInt64;and(v:UInt64|number|string):UInt64;or(v:UInt64|number|string):UInt64;xor(v:UInt64|number|string):UInt64;shr(v:UInt64|number|string):UInt64;shl(v:UInt64|number|string):UInt64;not():UInt64;compare(v:UInt64|number|string):number;equals(v:UInt64|number|string):boolean;toNumber():number;toString(radix?:number):string;toJSON():string;valueOf():number}declare class NativePointer{constructor(v:string|number|UInt64|Int64|NativePointerValue);isNull():boolean;add(v:NativePointerValue|UInt64|Int64|number|string):NativePointer;sub(v:NativePointerValue|UInt64|Int64|number|string):NativePointer;and(v:NativePointerValue|UInt64|Int64|number|string):NativePointer;or(v:NativePointerValue|UInt64|Int64|number|string):NativePointer;xor(v:NativePointerValue|UInt64|Int64|number|string):NativePointer;shr(v:NativePointerValue|UInt64|Int64|number|string):NativePointer;shl(v:NativePointerValue|UInt64|Int64|number|string):NativePointer;not():NativePointer;sign(key?:PointerAuthenticationKey,data?:NativePointerValue|UInt64|Int64|number|string):NativePointer;strip(key?:PointerAuthenticationKey):NativePointer;blend(smallInteger:number):NativePointer;equals(v:NativePointerValue|UInt64|Int64|number|string):boolean;compare(v:NativePointerValue|UInt64|Int64|number|string):number;toInt32():number;toUInt32():number;toString(radix?:number):string;toJSON():string;toMatchPattern():string;readPointer():NativePointer;readS8():number;readU8():number;readS16():number;readU16():number;readS32():number;readU32():number;readS64():Int64;readU64():UInt64;readShort():number;readUShort():number;readInt():number;readUInt():number;readLong():number|Int64;readULong():number|UInt64;readFloat():number;readDouble():number;readByteArray(length:number):ArrayBuffer|null;readCString(size?:number):string|null;readUtf8String(size?:number):string|null;readUtf16String(length?:number):string|null;readAnsiString(size?:number):string|null;writePointer(value:NativePointerValue):NativePointer;writeS8(value:number|Int64):NativePointer;writeU8(value:number|UInt64):NativePointer;writeS16(value:number|Int64):NativePointer;writeU16(value:number|UInt64):NativePointer;writeS32(value:number|Int64):NativePointer;writeU32(value:number|UInt64):NativePointer;writeS64(value:number|Int64):NativePointer;writeU64(value:number|UInt64):NativePointer;writeShort(value:number|Int64):NativePointer;writeUShort(value:number|UInt64):NativePointer;writeInt(value:number|Int64):NativePointer;writeUInt(value:number|UInt64):NativePointer;writeLong(value:number|Int64):NativePointer;writeULong(value:number|UInt64):NativePointer;writeFloat(value:number):NativePointer;writeDouble(value:number):NativePointer;writeByteArray(value:ArrayBuffer|number[]):NativePointer;writeUtf8String(value:string):NativePointer;writeUtf16String(value:string):NativePointer;writeAnsiString(value:string):NativePointer}type PointerAuthenticationKey="ia"|"ib"|"da"|"db";interface ObjectWrapper{handle:NativePointer}interface ArrayBufferConstructor{wrap(address:NativePointerValue,size:number):ArrayBuffer}interface ArrayBuffer{unwrap():NativePointer}type NativePointerValue=NativePointer|ObjectWrapper;declare const NativeFunction:NativeFunctionConstructor;interface NativeFunctionConstructor{new<RetType extends NativeFunctionReturnType,ArgTypes extends NativeFunctionArgumentType[]|[]>(address:NativePointerValue,retType:RetType,argTypes:ArgTypes,abiOrOptions?:NativeABI|NativeFunctionOptions,):NativeFunction<GetNativeFunctionReturnValue<RetType>,ResolveVariadic<Extract<GetNativeFunctionArgumentValue<ArgTypes>,unknown[]>>>;readonly prototype:NativeFunction<void,[]>}interface NativeFunction<RetType extends NativeFunctionReturnValue,ArgTypes extends NativeFunctionArgumentValue[]|[]>extends NativePointer{(...args:ArgTypes):RetType;apply(thisArg:NativePointerValue|null|undefined,args:ArgTypes):RetType;call(thisArg?:NativePointerValue|null,...args:ArgTypes):RetType}declare const SystemFunction:SystemFunctionConstructor;interface SystemFunctionConstructor{new<RetType extends NativeFunctionReturnType,ArgTypes extends NativeFunctionArgumentType[]|[]>(address:NativePointerValue,retType:RetType,argTypes:ArgTypes,abiOrOptions?:NativeABI|NativeFunctionOptions,):SystemFunction<GetNativeFunctionReturnValue<RetType>,ResolveVariadic<Extract<GetNativeFunctionArgumentValue<ArgTypes>,unknown[]>>>;readonly prototype:SystemFunction<void,[]>}interface SystemFunction<RetType extends NativeFunctionReturnValue,ArgTypes extends NativeFunctionArgumentValue[]|[]>extends NativePointer{(...args:ArgTypes):SystemFunctionResult<RetType>;apply(thisArg:NativePointerValue|null|undefined,args:ArgTypes):SystemFunctionResult<RetType>;call(thisArg?:NativePointerValue|null,...args:ArgTypes):SystemFunctionResult<RetType>}type SystemFunctionResult<Value extends NativeFunctionReturnValue>=|WindowsSystemFunctionResult<Value>|UnixSystemFunctionResult<Value>;interface WindowsSystemFunctionResult<Value extends NativeFunctionReturnValue>{value:Value;lastError:number}interface UnixSystemFunctionResult<Value extends NativeFunctionReturnValue>{value:Value;errno:number}declare class NativeCallback<RetType extends NativeCallbackReturnType,ArgTypes extends NativeCallbackArgumentType[]|[],>extends NativePointer{constructor(func:NativeCallbackImplementation<GetNativeCallbackReturnValue<RetType>,Extract<GetNativeCallbackArgumentValue<ArgTypes>,unknown[]>>,retType:RetType,argTypes:ArgTypes,abi?:NativeABI,)}type NativeCallbackImplementation<RetType extends NativeCallbackReturnValue,ArgTypes extends NativeCallbackArgumentValue[]|[],>=(this:CallbackContext|InvocationContext,...args:ArgTypes)=>RetType;interface CallbackContext{returnAddress:NativePointer;context:CpuContext}type Variadic="...";type ResolveVariadic<List extends any[]>=List extends[Variadic,...infer Tail]?[...Array<Tail[0]>]:List extends[infer Head,...infer Tail]?[Head,...ResolveVariadic<Tail>]:[];type RecursiveValuesOf<T>=T[keyof T]|Array<RecursiveValuesOf<T>>;type RecursiveKeysOf<T>=keyof T|Array<RecursiveKeysOf<T>>|[];type GetValue<Map,Value,Type,T extends Type>=Type[]extends T?Value:T extends keyof Map?Map[T]:{[P in keyof T]:T[P]extends Type?GetValue<Map,Value,Type,T[P]>:never};type BaseNativeTypeMap={int:number;uint:number;long:number;ulong:number;char:number;uchar:number;float:number;double:number;int8:number;uint8:number;int16:number;uint16:number;int32:number;uint32:number;bool:number};type NativeFunctionArgumentTypeMap=BaseNativeTypeMap&{void:undefined;pointer:NativePointerValue;size_t:number|UInt64;ssize_t:number|Int64;int64:number|Int64;uint64:number|UInt64;"...":Variadic};type NativeFunctionArgumentValue=RecursiveValuesOf<NativeFunctionArgumentTypeMap>;type NativeFunctionArgumentType=RecursiveKeysOf<NativeFunctionArgumentTypeMap>;type GetNativeFunctionArgumentValue<T extends NativeFunctionArgumentType>=GetValue<NativeFunctionArgumentTypeMap,NativeFunctionArgumentValue,NativeFunctionArgumentType,T>;type NativeFunctionReturnTypeMap=BaseNativeTypeMap&{void:void;pointer:NativePointer;size_t:UInt64;ssize_t:Int64;int64:Int64;uint64:UInt64};type NativeFunctionReturnValue=RecursiveValuesOf<NativeFunctionReturnTypeMap>;type NativeFunctionReturnType=RecursiveKeysOf<NativeFunctionReturnTypeMap>;type GetNativeFunctionReturnValue<T extends NativeFunctionReturnType>=GetValue<NativeFunctionReturnTypeMap,NativeFunctionReturnValue,NativeFunctionReturnType,T>;type NativeCallbackArgumentTypeMap=BaseNativeTypeMap&{void:undefined;pointer:NativePointer;size_t:UInt64;ssize_t:Int64;int64:Int64;uint64:UInt64};type NativeCallbackArgumentValue=RecursiveValuesOf<NativeCallbackArgumentTypeMap>;type NativeCallbackArgumentType=RecursiveKeysOf<NativeCallbackArgumentTypeMap>;type GetNativeCallbackArgumentValue<T extends NativeCallbackArgumentType>=GetValue<NativeCallbackArgumentTypeMap,NativeCallbackArgumentValue,NativeCallbackArgumentType,T>;type NativeCallbackReturnTypeMap=BaseNativeTypeMap&{void:void;pointer:NativePointerValue;size_t:number|UInt64;ssize_t:number|Int64;int64:number|Int64;uint64:number|UInt64};type NativeCallbackReturnValue=RecursiveValuesOf<NativeCallbackReturnTypeMap>;type NativeCallbackReturnType=RecursiveKeysOf<NativeCallbackReturnTypeMap>;type GetNativeCallbackReturnValue<T extends NativeCallbackReturnType>=GetValue<NativeCallbackReturnTypeMap,NativeCallbackReturnValue,NativeCallbackReturnType,T>;type NativeABI=|"default"|"sysv"|"stdcall"|"thiscall"|"fastcall"|"mscdecl"|"win64"|"unix64"|"vfp";interface NativeFunctionOptions{abi?:NativeABI|undefined;scheduling?:SchedulingBehavior|undefined;exceptions?:ExceptionsBehavior|undefined;traps?:CodeTraps|undefined}type SchedulingBehavior="cooperative"|"exclusive";type ExceptionsBehavior="steal"|"propagate";type CodeTraps="default"|"all";type CpuContext=PortableCpuContext|Ia32CpuContext|X64CpuContext|ArmCpuContext|Arm64CpuContext|MipsCpuContext;interface PortableCpuContext{pc:NativePointer;sp:NativePointer}interface Ia32CpuContext extends PortableCpuContext{eax:NativePointer;ecx:NativePointer;edx:NativePointer;ebx:NativePointer;esp:NativePointer;ebp:NativePointer;esi:NativePointer;edi:NativePointer;eip:NativePointer}interface X64CpuContext extends PortableCpuContext{rax:NativePointer;rcx:NativePointer;rdx:NativePointer;rbx:NativePointer;rsp:NativePointer;rbp:NativePointer;rsi:NativePointer;rdi:NativePointer;r8:NativePointer;r9:NativePointer;r10:NativePointer;r11:NativePointer;r12:NativePointer;r13:NativePointer;r14:NativePointer;r15:NativePointer;rip:NativePointer}interface ArmCpuContext extends PortableCpuContext{r0:NativePointer;r1:NativePointer;r2:NativePointer;r3:NativePointer;r4:NativePointer;r5:NativePointer;r6:NativePointer;r7:NativePointer;r8:NativePointer;r9:NativePointer;r10:NativePointer;r11:NativePointer;r12:NativePointer;lr:NativePointer}interface Arm64CpuContext extends PortableCpuContext{x0:NativePointer;x1:NativePointer;x2:NativePointer;x3:NativePointer;x4:NativePointer;x5:NativePointer;x6:NativePointer;x7:NativePointer;x8:NativePointer;x9:NativePointer;x10:NativePointer;x11:NativePointer;x12:NativePointer;x13:NativePointer;x14:NativePointer;x15:NativePointer;x16:NativePointer;x17:NativePointer;x18:NativePointer;x19:NativePointer;x20:NativePointer;x21:NativePointer;x22:NativePointer;x23:NativePointer;x24:NativePointer;x25:NativePointer;x26:NativePointer;x27:NativePointer;x28:NativePointer;fp:NativePointer;lr:NativePointer}interface MipsCpuContext extends PortableCpuContext{gp:NativePointer;fp:NativePointer;ra:NativePointer;hi:NativePointer;lo:NativePointer;at:NativePointer;v0:NativePointer;v1:NativePointer;a0:NativePointer;a1:NativePointer;a2:NativePointer;a3:NativePointer;t0:NativePointer;t1:NativePointer;t2:NativePointer;t3:NativePointer;t4:NativePointer;t5:NativePointer;t6:NativePointer;t7:NativePointer;t8:NativePointer;t9:NativePointer;s0:NativePointer;s1:NativePointer;s2:NativePointer;s3:NativePointer;s4:NativePointer;s5:NativePointer;s6:NativePointer;s7:NativePointer;k0:NativePointer;k1:NativePointer}declare class MatchPattern{constructor(pattern:string)}declare namespace Socket{function listen(options?:SocketListenOptions):Promise<SocketListener>;function connect(options:SocketConnectOptions):Promise<SocketConnection>;function type(handle:number):SocketType|null;function localAddress(handle:number):SocketEndpointAddress|null;function peerAddress(handle:number):SocketEndpointAddress|null}type SocketListener=TcpListener|UnixListener;interface BaseListener{close():Promise<void>;accept():Promise<SocketConnection>}interface TcpListener extends BaseListener{port:number}interface UnixListener extends BaseListener{path:string}declare abstract class SocketConnection extends IOStream{setNoDelay(noDelay:boolean):Promise<void>}declare abstract class IOStream{input:InputStream;output:OutputStream;close():Promise<void>}declare abstract class InputStream{close():Promise<void>;read(size:number):Promise<ArrayBuffer>;readAll(size:number):Promise<ArrayBuffer>}declare abstract class OutputStream{close():Promise<void>;write(data:ArrayBuffer|number[]):Promise<number>;writeAll(data:ArrayBuffer|number[]):Promise<void>;writeMemoryRegion(address:NativePointerValue,size:number):Promise<number>}declare class UnixInputStream extends InputStream{constructor(fd:number,options?:UnixStreamOptions)}declare class UnixOutputStream extends OutputStream{constructor(fd:number,options?:UnixStreamOptions)}declare class Win32InputStream extends InputStream{constructor(handle:NativePointerValue,options?:WindowsStreamOptions)}declare class Win32OutputStream extends OutputStream{constructor(handle:NativePointerValue,options?:WindowsStreamOptions)}interface UnixStreamOptions{autoClose?:boolean|undefined}interface WindowsStreamOptions{autoClose?:boolean|undefined}type AddressFamily=|"unix"|"ipv4"|"ipv6";type SocketType=|"tcp"|"udp"|"tcp6"|"udp6"|"unix:stream"|"unix:dgram";type UnixSocketType=|"anonymous"|"path"|"abstract"|"abstract-padded";type SocketListenOptions=TcpListenOptions|UnixListenOptions;interface TcpListenOptions extends BaseListenOptions{family?:"ipv4"|"ipv6"|undefined;host?:string|undefined;port?:number|undefined}interface UnixListenOptions extends BaseListenOptions{family:"unix";type?:UnixSocketType|undefined;path:string}interface BaseListenOptions{backlog?:number|undefined}type SocketConnectOptions=TcpConnectOptions|UnixConnectOptions;interface TcpConnectOptions{family?:"ipv4"|"ipv6"|undefined;host?:string|undefined;port:number;tls?:boolean|undefined}interface UnixConnectOptions{family:"unix";type?:UnixSocketType|undefined;path:string;tls?:boolean|undefined}type SocketEndpointAddress=TcpEndpointAddress|UnixEndpointAddress;interface TcpEndpointAddress{ip:string;port:number}interface UnixEndpointAddress{path:string}declare class File{constructor(filePath:string,mode:string);write(data:string|ArrayBuffer):void;flush():void;close():void}declare class SqliteDatabase{static open(path:string,options?:SqliteOpenOptions):SqliteDatabase;static openInline(encodedContents:string):SqliteDatabase;close():void;exec(sql:string):void;prepare(sql:string):SqliteStatement;dump():string}interface SqliteOpenOptions{flags?:SqliteOpenFlag[]|undefined}type SqliteOpenFlag=|"readonly"|"readwrite"|"create";declare class SqliteStatement{bindInteger(index:number,value:number):void;bindFloat(index:number,value:number):void;bindText(index:number,value:string):void;bindBlob(index:number,bytes:ArrayBuffer|number[]|string):void;bindNull(index:number):void;step():any[]|null;reset():void}declare namespace Interceptor{function attach(target:NativePointerValue,callbacksOrProbe:InvocationListenerCallbacks|InstructionProbeCallback,data?:NativePointerValue):InvocationListener;function detachAll():void;function replace(target:NativePointerValue,replacement:NativePointerValue,data?:NativePointerValue):void;function revert(target:NativePointerValue):void;function flush():void}declare class InvocationListener{detach():void}type InvocationListenerCallbacks=ScriptInvocationListenerCallbacks|NativeInvocationListenerCallbacks;interface ScriptInvocationListenerCallbacks{onEnter?:((this:InvocationContext,args:InvocationArguments)=>void)|undefined;onLeave?:((this:InvocationContext,retval:InvocationReturnValue)=>void)|undefined}interface NativeInvocationListenerCallbacks{onEnter?:NativePointer|undefined;onLeave?:NativePointer|undefined}type InstructionProbeCallback=(this:InvocationContext,args:InvocationArguments)=>void;type InvocationArguments=NativePointer[];declare class InvocationReturnValue extends NativePointer{replace(value:NativePointerValue):void}type InvocationContext=PortableInvocationContext|WindowsInvocationContext|UnixInvocationContext;interface PortableInvocationContext{returnAddress:NativePointer;context:CpuContext;threadId:ThreadId;depth:number;[x:string]:any}interface WindowsInvocationContext extends PortableInvocationContext{lastError:number}interface UnixInvocationContext extends PortableInvocationContext{errno:number}declare namespace Stalker{function exclude(range:MemoryRange):void;function follow(threadId?:ThreadId,options?:StalkerOptions):void;function unfollow(threadId?:ThreadId):void;function parse(events:ArrayBuffer,options?:StalkerParseOptions):StalkerEventFull[]|StalkerEventBare[];function flush():void;function garbageCollect():void;function invalidate(address:NativePointerValue):void;function invalidate(threadId:ThreadId,address:NativePointerValue):void;function addCallProbe(address:NativePointerValue,callback:StalkerCallProbeCallback,data?:NativePointerValue):StalkerCallProbeId;function removeCallProbe(callbackId:StalkerCallProbeId):void;let trustThreshold:number;let queueCapacity:number;let queueDrainInterval:number}interface StalkerOptions{events?:{call?:boolean|undefined;ret?:boolean|undefined;exec?:boolean|undefined;block?:boolean|undefined;compile?:boolean|undefined}|undefined;onReceive?:((events:ArrayBuffer)=>void)|undefined;onCallSummary?:((summary:StalkerCallSummary)=>void)|undefined;onEvent?:StalkerNativeEventCallback|undefined;transform?:StalkerTransformCallback|undefined;data?:NativePointerValue|undefined}interface StalkerParseOptions{annotate?:boolean|undefined;stringify?:boolean|undefined}interface StalkerCallSummary{[target:string]:number}type StalkerCallProbeCallback=StalkerScriptCallProbeCallback|StalkerNativeCallProbeCallback;type StalkerScriptCallProbeCallback=(args:InvocationArguments)=>void;type StalkerNativeCallProbeCallback=NativePointer;type StalkerCallProbeId=number;type StalkerEventType=|"call"|"ret"|"exec"|"block"|"compile";type StalkerEventFull=StalkerCallEventFull|StalkerRetEventFull|StalkerExecEventFull|StalkerBlockEventFull|StalkerCompileEventFull;type StalkerEventBare=StalkerCallEventBare|StalkerRetEventBare|StalkerExecEventBare|StalkerBlockEventBare|StalkerCompileEventBare;type StalkerCallEventFull=["call",NativePointer|string,NativePointer|string,number];type StalkerCallEventBare=[NativePointer|string,NativePointer|string,number];type StalkerRetEventFull=["ret",NativePointer|string,NativePointer|string,number];type StalkerRetEventBare=[NativePointer|string,NativePointer|string,number];type StalkerExecEventFull=["exec",NativePointer|string];type StalkerExecEventBare=[NativePointer|string];type StalkerBlockEventFull=["block",NativePointer|string,NativePointer|string];type StalkerBlockEventBare=[NativePointer|string,NativePointer|string];type StalkerCompileEventFull=["compile",NativePointer|string,NativePointer|string];type StalkerCompileEventBare=[NativePointer|string,NativePointer|string];type StalkerNativeEventCallback=NativePointer;type StalkerTransformCallback=|StalkerX86TransformCallback|StalkerArm32TransformCallback|StalkerArm64TransformCallback|StalkerNativeTransformCallback;type StalkerX86TransformCallback=(iterator:StalkerX86Iterator)=>void;type StalkerArm32TransformCallback=(iterator:StalkerArmIterator|StalkerThumbIterator)=>void;type StalkerArm64TransformCallback=(iterator:StalkerArm64Iterator)=>void;type StalkerNativeTransformCallback=NativePointer;interface StalkerX86Iterator extends X86Writer{next():X86Instruction|null;keep():void;putCallout(callout:StalkerCallout,data?:NativePointerValue):void}interface StalkerArmIterator extends ArmWriter{next():ArmInstruction|null;keep():void;putCallout(callout:StalkerCallout,data?:NativePointerValue):void}interface StalkerThumbIterator extends ThumbWriter{next():ArmInstruction|null;keep():void;putCallout(callout:StalkerCallout,data?:NativePointerValue):void}interface StalkerArm64Iterator extends Arm64Writer{next():Arm64Instruction|null;keep():void;putCallout(callout:StalkerCallout,data?:NativePointerValue):void}type StalkerCallout=StalkerScriptCallout|StalkerNativeCallout;type StalkerScriptCallout=(context:CpuContext)=>void;type StalkerNativeCallout=NativePointer;declare class ApiResolver{constructor(type:ApiResolverType);enumerateMatches(query:string):ApiResolverMatch[]}interface ApiResolverMatch{name:string;address:NativePointer}type ApiResolverType=|"module"|"objc";declare class DebugSymbol{address:NativePointer;name:string|null;moduleName:string|null;fileName:string|null;lineNumber:number|null;static fromAddress(address:NativePointerValue):DebugSymbol;static fromName(name:string):DebugSymbol;static getFunctionByName(name:string):NativePointer;static findFunctionsNamed(name:string):NativePointer[];static findFunctionsMatching(glob:string):NativePointer[];static load(path:string):void;toString():string}declare class CModule{constructor(code:string|ArrayBuffer,symbols?:CSymbols,options?:CModuleOptions);dispose():void;readonly[name:string]:any;static builtins:CModuleBuiltins}interface CModuleOptions{toolchain?:CModuleToolchain|undefined}type CModuleToolchain="any"|"internal"|"external";interface CSymbols{[name:string]:NativePointerValue}interface CModuleBuiltins{defines:CModuleDefines;headers:CModuleHeaders}interface CModuleDefines{readonly[name:string]:string|true}interface CModuleHeaders{readonly[name:string]:string}declare class Instruction{static parse(target:NativePointerValue):Instruction|X86Instruction|ArmInstruction|Arm64Instruction|MipsInstruction;address:NativePointer;next:NativePointer;size:number;mnemonic:string;opStr:string;groups:string[];toString():string}declare class X86Instruction extends Instruction{operands:X86Operand[];regsAccessed:RegsAccessed<X86Register>;regsRead:X86Register[];regsWritten:X86Register[]}declare class ArmInstruction extends Instruction{operands:ArmOperand[];regsAccessed:RegsAccessed<ArmRegister>;regsRead:ArmRegister[];regsWritten:ArmRegister[]}declare class Arm64Instruction extends Instruction{operands:Arm64Operand[];regsAccessed:RegsAccessed<Arm64Register>;regsRead:Arm64Register[];regsWritten:Arm64Register[]}declare class MipsInstruction extends Instruction{operands:MipsOperand[];regsAccessed:RegsAccessed<MipsRegister>;regsRead:MipsRegister[];regsWritten:MipsRegister[]}interface RegsAccessed<T>{read:T[];written:T[]}type OperandAccess=""|"r"|"w"|"rw";type X86Operand=X86RegOperand|X86ImmOperand|X86MemOperand;type X86OperandType="reg"|"imm"|"mem";interface X86BaseOperand{size:number;access:OperandAccess}interface X86RegOperand extends X86BaseOperand{type:"reg";value:X86Register}interface X86ImmOperand extends X86BaseOperand{type:"imm";value:number|Int64}interface X86MemOperand extends X86BaseOperand{type:"mem";value:{segment?:X86Register|undefined;base?:X86Register|undefined;index?:X86Register|undefined;scale:number;disp:number}}type ArmOperand=ArmRegOperand|ArmImmOperand|ArmMemOperand|ArmFpOperand|ArmCimmOperand|ArmPimmOperand|ArmSetendOperand|ArmSysregOperand;type ArmOperandType=|"reg"|"imm"|"mem"|"fp"|"cimm"|"pimm"|"setend"|"sysreg";interface ArmBaseOperand{shift?:{type:ArmShifter;value:number}|undefined;vectorIndex?:number|undefined;subtracted:boolean;access:OperandAccess}interface ArmRegOperand extends ArmBaseOperand{type:"reg";value:ArmRegister}interface ArmImmOperand extends ArmBaseOperand{type:"imm";value:number}interface ArmMemOperand extends ArmBaseOperand{type:"mem";value:{base?:ArmRegister|undefined;index?:ArmRegister|undefined;scale:number;disp:number}}interface ArmFpOperand extends ArmBaseOperand{type:"fp";value:number}interface ArmCimmOperand extends ArmBaseOperand{type:"cimm";value:number}interface ArmPimmOperand extends ArmBaseOperand{type:"pimm";value:number}interface ArmSetendOperand extends ArmBaseOperand{type:"setend";value:Endian}interface ArmSysregOperand extends ArmBaseOperand{type:"sysreg";value:ArmRegister}type Arm64Operand=Arm64RegOperand|Arm64ImmOperand|Arm64MemOperand|Arm64FpOperand|Arm64CimmOperand|Arm64RegMrsOperand|Arm64RegMsrOperand|Arm64PstateOperand|Arm64SysOperand|Arm64PrefetchOperand|Arm64BarrierOperand;type Arm64OperandType=|"reg"|"imm"|"mem"|"fp"|"cimm"|"reg-mrs"|"reg-msr"|"pstate"|"sys"|"prefetch"|"barrier";interface Arm64BaseOperand{shift?:{type:Arm64Shifter;value:number}|undefined;ext?:Arm64Extender|undefined;vas?:Arm64Vas|undefined;vectorIndex?:number|undefined;access:OperandAccess}interface Arm64RegOperand extends Arm64BaseOperand{type:"reg";value:Arm64Register}interface Arm64ImmOperand extends Arm64BaseOperand{type:"imm";value:Int64}interface Arm64MemOperand extends Arm64BaseOperand{type:"mem";value:{base?:Arm64Register|undefined;index?:Arm64Register|undefined;disp:number}}interface Arm64FpOperand extends Arm64BaseOperand{type:"fp";value:number}interface Arm64CimmOperand extends Arm64BaseOperand{type:"cimm";value:Int64}interface Arm64RegMrsOperand extends Arm64BaseOperand{type:"reg-mrs";value:Arm64Register}interface Arm64RegMsrOperand extends Arm64BaseOperand{type:"reg-msr";value:Arm64Register}interface Arm64PstateOperand extends Arm64BaseOperand{type:"pstate";value:number}interface Arm64SysOperand extends Arm64BaseOperand{type:"sys";value:number}interface Arm64PrefetchOperand extends Arm64BaseOperand{type:"prefetch";value:number}interface Arm64BarrierOperand extends Arm64BaseOperand{type:"barrier";value:number}type Arm64Shifter=|"lsl"|"msl"|"lsr"|"asr"|"ror";type Arm64Extender=|"uxtb"|"uxth"|"uxtw"|"uxtx"|"sxtb"|"sxth"|"sxtw"|"sxtx";type Arm64Vas=|"8b"|"16b"|"4h"|"8h"|"2s"|"4s"|"1d"|"2d"|"1q";type MipsOperand=MipsRegOperand|MipsImmOperand|MipsMemOperand;type MipsOperandType="reg"|"imm"|"mem";interface MipsRegOperand{type:"reg";value:MipsRegister}interface MipsImmOperand{type:"imm";value:number}interface MipsMemOperand{type:"mem";value:{base?:MipsRegister|undefined;disp:number}}type Endian="be"|"le";declare namespace Kernel{const available:boolean;let base:UInt64;const pageSize:number;function enumerateModules():KernelModuleDetails[];function enumerateRanges(specifier:PageProtection|EnumerateRangesSpecifier):KernelRangeDetails[];function enumerateModuleRanges(name:string|null,protection:PageProtection):KernelModuleRangeDetails[];function alloc(size:number|UInt64):UInt64;function protect(address:UInt64,size:number|UInt64,protection:PageProtection):boolean;function scan(address:UInt64,size:number|UInt64,pattern:string|MatchPattern,callbacks:KernelMemoryScanCallbacks):Promise<void>;function scanSync(address:UInt64,size:number|UInt64,pattern:string|MatchPattern):KernelMemoryScanMatch[];function readS8(address:UInt64):number;function readU8(address:UInt64):number;function readS16(address:UInt64):number;function readU16(address:UInt64):number;function readS32(address:UInt64):number;function readU32(address:UInt64):number;function readS64(address:UInt64):Int64;function readU64(address:UInt64):UInt64;function readShort(address:UInt64):number;function readUShort(address:UInt64):number;function readInt(address:UInt64):number;function readUInt(address:UInt64):number;function readLong(address:UInt64):number|Int64;function readULong(address:UInt64):number|UInt64;function readFloat(address:UInt64):number;function readDouble(address:UInt64):number;function readByteArray(address:UInt64,length:number):ArrayBuffer|null;function readCString(address:UInt64,size:number):string|null;function readUtf8String(address:UInt64,size:number):string|null;function readUtf16String(address:UInt64,length:number):string|null;function writeS8(address:UInt64,value:number|Int64):void;function writeU8(address:UInt64,value:number|UInt64):void;function writeS16(address:UInt64,value:number|Int64):void;function writeU16(address:UInt64,value:number|UInt64):void;function writeS32(address:UInt64,value:number|Int64):void;function writeU32(address:UInt64,value:number|UInt64):void;function writeS64(address:UInt64,value:number|Int64):void;function writeU64(address:UInt64,value:number|UInt64):void;function writeShort(address:UInt64,value:number|Int64):void;function writeUShort(address:UInt64,value:number|UInt64):void;function writeInt(address:UInt64,value:number|Int64):void;function writeUInt(address:UInt64,value:number|UInt64):void;function writeLong(address:UInt64,value:number|Int64):void;function writeULong(address:UInt64,value:number|UInt64):void;function writeFloat(address:UInt64,value:number):void;function writeDouble(address:UInt64,value:number):void;function writeByteArray(address:UInt64,value:ArrayBuffer|number[]):void;function writeUtf8String(address:UInt64,value:string):void;function writeUtf16String(address:UInt64,value:string):void}declare namespace ObjC{const available:boolean;const api:{[name:string]:any};const classes:{[name:string]:ObjC.Object};const protocols:{[name:string]:Protocol};const mainQueue:NativePointer;function schedule(queue:NativePointerValue,work:()=>void):void;class Object implements ObjectWrapper,ObjectMethods{constructor(handle:NativePointer,protocol?:Protocol);handle:NativePointer;$kind:ObjectKind;$super:ObjC.Object;$superClass:ObjC.Object;$class:ObjC.Object;$className:string;$moduleName:string;$protocols:{[name:string]:Protocol};$methods:string[];$ownMethods:string[];$ivars:{[name:string]:any};equals(other:ObjC.Object|NativePointer):boolean;[name:string]:any}interface ObjectMethods{[name:string]:ObjectMethod}interface ObjectMethod extends ObjectWrapper,AnyFunction{handle:NativePointer;selector:NativePointer;implementation:NativePointer;returnType:string;argumentTypes:string[];types:string;clone:(options:NativeFunctionOptions)=>ObjectMethod}type ObjectKind="instance"|"class"|"meta-class";class Protocol implements ObjectWrapper{constructor(handle:NativePointer);handle:NativePointer;name:string;protocols:{[name:string]:Protocol};properties:{[name:string]:ProtocolPropertyAttributes};methods:{[name:string]:ProtocolMethodDescription}}interface ProtocolPropertyAttributes{[name:string]:string}interface ProtocolMethodDescription{required:boolean;types:string}class Block implements ObjectWrapper{constructor(target:NativePointer|MethodSpec<BlockImplementation>,options?:NativeFunctionOptions);handle:NativePointer;types?:string|undefined;implementation:AnyFunction;declare(signature:BlockSignature):void}type BlockImplementation=(this:Block,...args:any[])=>any;type BlockSignature=SimpleBlockSignature|DetailedBlockSignature;interface SimpleBlockSignature{retType:string;argTypes:string[]}interface DetailedBlockSignature{types:string}function implement(method:ObjectMethod,fn:AnyFunction):NativeCallback<any,any>;function registerProxy(spec:ProxySpec):ProxyConstructor;function registerClass(spec:ClassSpec):ObjC.Object;function registerProtocol(spec:ProtocolSpec):Protocol;function bind(obj:ObjC.Object|NativePointer,data:InstanceData):void;function unbind(obj:ObjC.Object|NativePointer):void;function getBoundData(obj:ObjC.Object|NativePointer):any;function enumerateLoadedClasses(callbacks:EnumerateLoadedClassesCallbacks):void;function enumerateLoadedClasses(options:EnumerateLoadedClassesOptions,callbacks:EnumerateLoadedClassesCallbacks):void;function enumerateLoadedClassesSync(options?:EnumerateLoadedClassesOptions):EnumerateLoadedClassesResult;interface EnumerateLoadedClassesOptions{ownedBy?:ModuleMap|undefined}interface EnumerateLoadedClassesCallbacks{onMatch:(name:string,owner:string)=>void;onComplete:()=>void}interface EnumerateLoadedClassesResult{[owner:string]:string[]}function choose(specifier:ChooseSpecifier,callbacks:EnumerateCallbacks<ObjC.Object>):void;function chooseSync(specifier:ChooseSpecifier):ObjC.Object[];function selector(name:string):NativePointer;function selectorAsString(sel:NativePointerValue):string;interface ProxySpec<D extends ProxyData=ProxyData,T=ObjC.Object,S=ObjC.Object>{name?:string|undefined;protocols?:Protocol[]|undefined;methods?:{[name:string]:UserMethodImplementation<D,T,S>|MethodSpec<UserMethodImplementation<D,T,S>>}|undefined;events?:ProxyEventCallbacks<D,T,S>|undefined}interface ProxyEventCallbacks<D,T,S>{dealloc?(this:UserMethodInvocation<D,T,S>):void;forward?(this:UserMethodInvocation<D,T,S>,name:string):void}interface ProxyConstructor{new(target:ObjC.Object|NativePointer,data?:InstanceData):ProxyInstance}interface ProxyInstance{handle:NativePointer}interface ProxyData extends InstanceData{target:ObjC.Object;events:{}}interface ClassSpec<D=InstanceData,T=ObjC.Object,S=ObjC.Object>{name?:string|undefined;super?:ObjC.Object|null|undefined;protocols?:Protocol[]|undefined;methods?:{[name:string]:UserMethodImplementation<D,T,S>|MethodSpec<UserMethodImplementation<D,T,S>>}|undefined}type MethodSpec<I>=SimpleMethodSpec<I>|DetailedMethodSpec<I>;interface SimpleMethodSpec<I>{retType:string;argTypes:string[];implementation:I}interface DetailedMethodSpec<I>{types:string;implementation:I}type UserMethodImplementation<D,T,S>=(this:UserMethodInvocation<D,T,S>,...args:any[])=>any;interface UserMethodInvocation<D,T,S>{self:T;super:S;data:D}interface InstanceData{[name:string]:any}interface ProtocolSpec{name?:string|undefined;protocols?:Protocol[]|undefined;methods?:{[name:string]:ProtocolMethodSpec}|undefined}type ProtocolMethodSpec=SimpleProtocolMethodSpec|DetailedProtocolMethodSpec;interface SimpleProtocolMethodSpec{retType:string;argTypes:string[];optional?:boolean|undefined}interface DetailedProtocolMethodSpec{types:string;optional?:boolean|undefined}type ChooseSpecifier=SimpleChooseSpecifier|DetailedChooseSpecifier;type SimpleChooseSpecifier=ObjC.Object;interface DetailedChooseSpecifier{class:ObjC.Object;subclasses?:boolean|undefined}}declare namespace Java{const available:boolean;const androidVersion:string;function synchronized(obj:Wrapper,fn:()=>void):void;function enumerateLoadedClasses(callbacks:EnumerateLoadedClassesCallbacks):void;function enumerateLoadedClassesSync():string[];function enumerateClassLoaders(callbacks:EnumerateClassLoadersCallbacks):void;function enumerateClassLoadersSync():Wrapper[];function enumerateMethods(query:string):EnumerateMethodsMatchGroup[];function scheduleOnMainThread(fn:()=>void):void;function perform(fn:()=>void):void;function performNow(fn:()=>void):void;function use<T extends Members<T>={}>(className:string):Wrapper<T>;function openClassFile(filePath:string):DexFile;function choose(className:string,callbacks:ChooseCallbacks):void;function retain<T extends Members<T>={}>(obj:Wrapper<T>):Wrapper<T>;function cast<From extends Members<From>={},To extends Members<To>={}>(handle:Wrapper<From>|NativePointerValue,klass:Wrapper<To>):Wrapper<To>;function array(type:string,elements:any[]):any[];function isMainThread():boolean;function registerClass(spec:ClassSpec):Wrapper;function deoptimizeEverything():void;function deoptimizeBootImage():void;const vm:VM;const classFactory:ClassFactory;interface EnumerateLoadedClassesCallbacks{onMatch:(name:string,handle:NativePointer)=>void;onComplete:()=>void}interface EnumerateClassLoadersCallbacks{onMatch:(loader:Wrapper)=>void;onComplete:()=>void}interface EnumerateMethodsMatchGroup{loader:Wrapper|null;classes:[EnumerateMethodsMatchClass,...EnumerateMethodsMatchClass[]]}interface EnumerateMethodsMatchClass{name:string;methods:[string,...string[]]}interface ChooseCallbacks{onMatch:(instance:Wrapper)=>void|EnumerateAction;onComplete:()=>void}type Members<T>=Record<keyof T,MethodDispatcher|Field>;type Wrapper<T extends Members<T>={}>={[K in keyof T]:T[K]extends Field<infer Value>?Field<Value,T>:MethodDispatcher<T>}&{$new:MethodDispatcher<T>;$alloc:MethodDispatcher<T>;$init:MethodDispatcher<T>;$dispose():void;class:Wrapper;$className:string;$ownMembers:string[];$super:Wrapper;[name:string]:any};interface MethodDispatcher<Holder extends Members<Holder>={}>extends Method<Holder>{overloads:Array<Method<Holder>>;overload(...args:string[]):Method<Holder>}interface Method<Holder extends Members<Holder>={}>{(...params:any[]):any;methodName:string;holder:Wrapper<Holder>;type:MethodType;handle:NativePointer;implementation:MethodImplementation<Holder>|null;returnType:Type;argumentTypes:Type[];canInvokeWith:(...args:any[])=>boolean;clone:(options:NativeFunctionOptions)=>Method<Holder>}type MethodImplementation<This extends Members<This>={}>=(this:Wrapper<This>,...params:any[])=>any;interface Field<Value=any,Holder extends Members<Holder>={}>{value:Value;holder:Wrapper<Holder>;fieldType:FieldType;fieldReturnType:Type}const enum MethodType{Constructor=1,Static=2,Instance=3,}const enum FieldType{Static=1,Instance=2,}interface Type{name:string;type:string;size:number;byteSize:number;className?:string|undefined;isCompatible:(value:any)=>boolean;fromJni?:((value:any)=>any)|undefined;toJni?:((value:any)=>any)|undefined;read?:((address:NativePointerValue)=>any)|undefined;write?:((address:NativePointerValue,value:any)=>void)|undefined}interface DexFile{load():void;getClassNames():string[]}interface ClassSpec{name:string;superClass?:Wrapper|undefined;implements?:Wrapper[]|undefined;fields?:{[name:string]:string}|undefined;methods?:{[name:string]:MethodImplementation|MethodSpec|MethodSpec[]}|undefined}interface MethodSpec{returnType?:string|undefined;argumentTypes?:string[]|undefined;implementation:MethodImplementation}interface VM{perform(fn:()=>void):void;getEnv():Env;tryGetEnv():Env|null}type Env=any;class ClassFactory{static get(classLoader:Wrapper|null):ClassFactory;readonly loader:Wrapper|null;cacheDir:string;tempFileNaming:TempFileNaming;use<T extends Members<T>={}>(className:string):Wrapper<T>;openClassFile(filePath:string):DexFile;choose(className:string,callbacks:ChooseCallbacks):void;retain<T extends Members<T>={}>(obj:Wrapper<T>):Wrapper<T>;cast<From extends Members<From>={},To extends Members<To>={}>(handle:Wrapper<From>|NativePointerValue,klass:Wrapper<To>):Wrapper<To>;array(type:string,elements:any[]):any[];registerClass(spec:ClassSpec):Wrapper}interface TempFileNaming{prefix:string;suffix:string}}declare class X86Writer{constructor(codeAddress:NativePointerValue,options?:X86WriterOptions);reset(codeAddress:NativePointerValue,options?:X86WriterOptions):void;dispose():void;flush():void;base:NativePointer;code:NativePointer;pc:NativePointer;offset:number;putLabel(id:string):void;putCallAddressWithArguments(func:NativePointerValue,args:X86CallArgument[]):void;putCallAddressWithAlignedArguments(func:NativePointerValue,args:X86CallArgument[]):void;putCallRegWithArguments(reg:X86Register,args:X86CallArgument[]):void;putCallRegWithAlignedArguments(reg:X86Register,args:X86CallArgument[]):void;putCallRegOffsetPtrWithArguments(reg:X86Register,offset:number|Int64|UInt64,args:X86CallArgument[]):void;putCallAddress(address:NativePointerValue):void;putCallReg(reg:X86Register):void;putCallRegOffsetPtr(reg:X86Register,offset:number|Int64|UInt64):void;putCallIndirect(addr:NativePointerValue):void;putCallIndirectLabel(labelId:string):void;putCallNearLabel(labelId:string):void;putLeave():void;putRet():void;putRetImm(immValue:number):void;putJmpAddress(address:NativePointerValue):void;putJmpShortLabel(labelId:string):void;putJmpNearLabel(labelId:string):void;putJmpReg(reg:X86Register):void;putJmpRegPtr(reg:X86Register):void;putJmpRegOffsetPtr(reg:X86Register,offset:number|Int64|UInt64):void;putJmpNearPtr(address:NativePointerValue):void;putJccShort(instructionId:X86InstructionId,target:NativePointerValue,hint:X86BranchHint):void;putJccNear(instructionId:X86InstructionId,target:NativePointerValue,hint:X86BranchHint):void;putJccShortLabel(instructionId:X86InstructionId,labelId:string,hint:X86BranchHint):void;putJccNearLabel(instructionId:X86InstructionId,labelId:string,hint:X86BranchHint):void;putAddRegImm(reg:X86Register,immValue:number|Int64|UInt64):void;putAddRegReg(dstReg:X86Register,srcReg:X86Register):void;putAddRegNearPtr(dstReg:X86Register,srcAddress:NativePointerValue):void;putSubRegImm(reg:X86Register,immValue:number|Int64|UInt64):void;putSubRegReg(dstReg:X86Register,srcReg:X86Register):void;putSubRegNearPtr(dstReg:X86Register,srcAddress:NativePointerValue):void;putIncReg(reg:X86Register):void;putDecReg(reg:X86Register):void;putIncRegPtr(target:X86PointerTarget,reg:X86Register):void;putDecRegPtr(target:X86PointerTarget,reg:X86Register):void;putLockXaddRegPtrReg(dstReg:X86Register,srcReg:X86Register):void;putLockCmpxchgRegPtrReg(dstReg:X86Register,srcReg:X86Register):void;putLockIncImm32Ptr(target:NativePointerValue):void;putLockDecImm32Ptr(target:NativePointerValue):void;putAndRegReg(dstReg:X86Register,srcReg:X86Register):void;putAndRegU32(reg:X86Register,immValue:number):void;putShlRegU8(reg:X86Register,immValue:number):void;putShrRegU8(reg:X86Register,immValue:number):void;putXorRegReg(dstReg:X86Register,srcReg:X86Register):void;putMovRegReg(dstReg:X86Register,srcReg:X86Register):void;putMovRegU32(dstReg:X86Register,immValue:number):void;putMovRegU64(dstReg:X86Register,immValue:number|UInt64):void;putMovRegAddress(dstReg:X86Register,address:NativePointerValue):void;putMovRegPtrU32(dstReg:X86Register,immValue:number):void;putMovRegOffsetPtrU32(dstReg:X86Register,dstOffset:number|Int64|UInt64,immValue:number):void;putMovRegPtrReg(dstReg:X86Register,srcReg:X86Register):void;putMovRegOffsetPtrReg(dstReg:X86Register,dstOffset:number|Int64|UInt64,srcReg:X86Register):void;putMovRegRegPtr(dstReg:X86Register,srcReg:X86Register):void;putMovRegRegOffsetPtr(dstReg:X86Register,srcReg:X86Register,srcOffset:number|Int64|UInt64):void;putMovRegBaseIndexScaleOffsetPtr(dstReg:X86Register,baseReg:X86Register,indexReg:X86Register,scale:number,offset:number|Int64|UInt64):void;putMovRegNearPtr(dstReg:X86Register,srcAddress:NativePointerValue):void;putMovNearPtrReg(dstAddress:NativePointerValue,srcReg:X86Register):void;putMovFsU32PtrReg(fsOffset:number,srcReg:X86Register):void;putMovRegFsU32Ptr(dstReg:X86Register,fsOffset:number):void;putMovGsU32PtrReg(fsOffset:number,srcReg:X86Register):void;putMovRegGsU32Ptr(dstReg:X86Register,fsOffset:number):void;putMovqXmm0EspOffsetPtr(offset:number):void;putMovqEaxOffsetPtrXmm0(offset:number):void;putMovdquXmm0EspOffsetPtr(offset:number):void;putMovdquEaxOffsetPtrXmm0(offset:number):void;putLeaRegRegOffset(dstReg:X86Register,srcReg:X86Register,srcOffset:number|Int64|UInt64):void;putXchgRegRegPtr(leftReg:X86Register,rightReg:X86Register):void;putPushU32(immValue:number):void;putPushNearPtr(address:NativePointerValue):void;putPushReg(reg:X86Register):void;putPopReg(reg:X86Register):void;putPushImmPtr(immPtr:NativePointerValue):void;putPushax():void;putPopax():void;putPushfx():void;putPopfx():void;putTestRegReg(regA:X86Register,regB:X86Register):void;putTestRegU32(reg:X86Register,immValue:number):void;putCmpRegI32(reg:X86Register,immValue:number):void;putCmpRegOffsetPtrReg(regA:X86Register,offset:number|Int64|UInt64,regB:X86Register):void;putCmpImmPtrImmU32(immPtr:NativePointerValue,immValue:number):void;putCmpRegReg(regA:X86Register,regB:X86Register):void;putClc():void;putStc():void;putCld():void;putStd():void;putCpuid():void;putLfence():void;putRdtsc():void;putPause():void;putNop():void;putBreakpoint():void;putPadding(n:number):void;putNopPadding(n:number):void;putU8(value:number):void;putS8(value:number):void;putBytes(data:ArrayBuffer|number[]|string):void}interface X86WriterOptions{pc?:NativePointer|undefined}type X86CallArgument=X86Register|number|UInt64|Int64|NativePointerValue;declare class X86Relocator{constructor(inputCode:NativePointerValue,output:X86Writer);reset(inputCode:NativePointerValue,output:X86Writer):void;dispose():void;input:Instruction|null;eob:boolean;eoi:boolean;readOne():number;peekNextWriteInsn():Instruction|null;peekNextWriteSource():NativePointer;skipOne():void;skipOneNoLabel():void;writeOne():boolean;writeOneNoLabel():boolean;writeAll():void}type X86Register=|"xax"|"xcx"|"xdx"|"xbx"|"xsp"|"xbp"|"xsi"|"xdi"|"eax"|"ecx"|"edx"|"ebx"|"esp"|"ebp"|"esi"|"edi"|"rax"|"rcx"|"rdx"|"rbx"|"rsp"|"rbp"|"rsi"|"rdi"|"r8"|"r9"|"r10"|"r11"|"r12"|"r13"|"r14"|"r15"|"r8d"|"r9d"|"r10d"|"r11d"|"r12d"|"r13d"|"r14d"|"r15d"|"xip"|"eip"|"rip";type X86InstructionId=|"jo"|"jno"|"jb"|"jae"|"je"|"jne"|"jbe"|"ja"|"js"|"jns"|"jp"|"jnp"|"jl"|"jge"|"jle"|"jg"|"jcxz"|"jecxz"|"jrcxz";type X86BranchHint="no-hint"|"likely"|"unlikely";type X86PointerTarget="byte"|"dword"|"qword";declare class ArmWriter{constructor(codeAddress:NativePointerValue,options?:ArmWriterOptions);reset(codeAddress:NativePointerValue,options?:ArmWriterOptions):void;dispose():void;flush():void;base:NativePointer;code:NativePointer;pc:NativePointer;offset:number;skip(nBytes:number):void;putLabel(id:string):void;putCallAddressWithArguments(func:NativePointerValue,args:ArmCallArgument[]):void;putBranchAddress(address:NativePointerValue):void;canBranchDirectlyBetween(from:NativePointerValue,to:NativePointerValue):boolean;putBImm(target:NativePointerValue):void;putBCondImm(cc:ArmConditionCode,target:NativePointerValue):void;putBLabel(labelId:string):void;putBCondLabel(cc:ArmConditionCode,labelId:string):void;putBlImm(target:NativePointerValue):void;putBlxImm(target:NativePointerValue):void;putBlLabel(labelId:string):void;putBxReg(reg:ArmRegister):void;putBlxReg(reg:ArmRegister):void;putRet():void;putLdrRegAddress(reg:ArmRegister,address:NativePointerValue):void;putLdrRegU32(reg:ArmRegister,val:number):void;putLdrRegRegOffset(dstReg:ArmRegister,srcReg:ArmRegister,srcOffset:number|Int64|UInt64):void;putLdrCondRegRegOffset(cc:ArmConditionCode,dstReg:ArmRegister,srcReg:ArmRegister,srcOffset:number|Int64|UInt64):void;putLdmiaRegMask(reg:ArmRegister,mask:number):void;putStrRegRegOffset(srcReg:ArmRegister,dstReg:ArmRegister,dstOffset:number|Int64|UInt64):void;putStrCondRegRegOffset(cc:ArmConditionCode,srcReg:ArmRegister,dstReg:ArmRegister,dstOffset:number|Int64|UInt64):void;putMovRegReg(dstReg:ArmRegister,srcReg:ArmRegister):void;putMovRegRegShift(dstReg:ArmRegister,srcReg:ArmRegister,shift:ArmShifter,shiftValue:number):void;putMovRegCpsr(reg:ArmRegister):void;putMovCpsrReg(reg:ArmRegister):void;putAddRegU16(dstReg:ArmRegister,val:number):void;putAddRegU32(dstReg:ArmRegister,val:number):void;putAddRegRegImm(dstReg:ArmRegister,srcReg:ArmRegister,immVal:number):void;putAddRegRegReg(dstReg:ArmRegister,srcReg1:ArmRegister,srcReg2:ArmRegister):void;putAddRegRegRegShift(dstReg:ArmRegister,srcReg1:ArmRegister,srcReg2:ArmRegister,shift:ArmShifter,shiftValue:number):void;putSubRegU16(dstReg:ArmRegister,val:number):void;putSubRegU32(dstReg:ArmRegister,val:number):void;putSubRegRegImm(dstReg:ArmRegister,srcReg:ArmRegister,immVal:number):void;putSubRegRegReg(dstReg:ArmRegister,srcReg1:ArmRegister,srcReg2:ArmRegister):void;putAndsRegRegImm(dstReg:ArmRegister,srcReg:ArmRegister,immVal:number):void;putCmpRegImm(dstReg:ArmRegister,immVal:number):void;putNop():void;putBreakpoint():void;putBrkImm(imm:number):void;putInstruction(insn:number):void;putBytes(data:ArrayBuffer|number[]|string):void}interface ArmWriterOptions{pc?:NativePointer|undefined}type ArmCallArgument=ArmRegister|number|UInt64|Int64|NativePointerValue;declare class ArmRelocator{constructor(inputCode:NativePointerValue,output:ArmWriter);reset(inputCode:NativePointerValue,output:ArmWriter):void;dispose():void;input:Instruction|null;eob:boolean;eoi:boolean;readOne():number;peekNextWriteInsn():Instruction|null;peekNextWriteSource():NativePointer;skipOne():void;writeOne():boolean;writeAll():void}declare class ThumbWriter{constructor(codeAddress:NativePointerValue,options?:ThumbWriterOptions);reset(codeAddress:NativePointerValue,options?:ThumbWriterOptions):void;dispose():void;flush():void;base:NativePointer;code:NativePointer;pc:NativePointer;offset:number;skip(nBytes:number):void;putLabel(id:string):void;commitLabel(id:string):boolean;putCallAddressWithArguments(func:NativePointerValue,args:ArmCallArgument[]):void;putCallRegWithArguments(reg:ArmRegister,args:ArmCallArgument[]):void;putBImm(target:NativePointerValue):void;putBLabel(labelId:string):void;putBLabelWide(labelId:string):void;putBxReg(reg:ArmRegister):void;putBlImm(target:NativePointerValue):void;putBlLabel(labelId:string):void;putBlxImm(target:NativePointerValue):void;putBlxReg(reg:ArmRegister):void;putCmpRegImm(reg:ArmRegister,immValue:number):void;putBeqLabel(labelId:string):void;putBneLabel(labelId:string):void;putBCondLabel(cc:ArmConditionCode,labelId:string):void;putBCondLabelWide(cc:ArmConditionCode,labelId:string):void;putCbzRegLabel(reg:ArmRegister,labelId:string):void;putCbnzRegLabel(reg:ArmRegister,labelId:string):void;putPushRegs(regs:ArmRegister[]):void;putPopRegs(regs:ArmRegister[]):void;putLdrRegAddress(reg:ArmRegister,address:NativePointerValue):void;putLdrRegU32(reg:ArmRegister,val:number):void;putLdrRegReg(dstReg:ArmRegister,srcReg:ArmRegister):void;putLdrRegRegOffset(dstReg:ArmRegister,srcReg:ArmRegister,srcOffset:number|Int64|UInt64):void;putLdrbRegReg(dstReg:ArmRegister,srcReg:ArmRegister):void;putVldrRegRegOffset(dstReg:ArmRegister,srcReg:ArmRegister,srcOffset:number|Int64|UInt64):void;putLdmiaRegMask(reg:ArmRegister,mask:number):void;putStrRegReg(srcReg:ArmRegister,dstReg:ArmRegister):void;putStrRegRegOffset(srcReg:ArmRegister,dstReg:ArmRegister,dstOffset:number|Int64|UInt64):void;putMovRegReg(dstReg:ArmRegister,srcReg:ArmRegister):void;putMovRegU8(dstReg:ArmRegister,immValue:number):void;putMovRegCpsr(reg:ArmRegister):void;putMovCpsrReg(reg:ArmRegister):void;putAddRegImm(dstReg:ArmRegister,immValue:number|Int64|UInt64):void;putAddRegReg(dstReg:ArmRegister,srcReg:ArmRegister):void;putAddRegRegReg(dstReg:ArmRegister,leftReg:ArmRegister,rightReg:ArmRegister):void;putAddRegRegImm(dstReg:ArmRegister,leftReg:ArmRegister,rightValue:number|Int64|UInt64):void;putSubRegImm(dstReg:ArmRegister,immValue:number|Int64|UInt64):void;putSubRegReg(dstReg:ArmRegister,srcReg:ArmRegister):void;putSubRegRegReg(dstReg:ArmRegister,leftReg:ArmRegister,rightReg:ArmRegister):void;putSubRegRegImm(dstReg:ArmRegister,leftReg:ArmRegister,rightValue:number|Int64|UInt64):void;putAndRegRegImm(dstReg:ArmRegister,leftReg:ArmRegister,rightValue:number|Int64|UInt64):void;putLslsRegRegImm(dstReg:ArmRegister,leftReg:ArmRegister,rightValue:number):void;putLsrsRegRegImm(dstReg:ArmRegister,leftReg:ArmRegister,rightValue:number):void;putMrsRegReg(dstReg:ArmRegister,srcReg:ArmSystemRegister):void;putMsrRegReg(dstReg:ArmSystemRegister,srcReg:ArmRegister):void;putNop():void;putBkptImm(imm:number):void;putBreakpoint():void;putInstruction(insn:number):void;putInstructionWide(upper:number,lower:number):void;putBytes(data:ArrayBuffer|number[]|string):void}interface ThumbWriterOptions{pc?:NativePointer|undefined}declare class ThumbRelocator{constructor(inputCode:NativePointerValue,output:ThumbWriter);reset(inputCode:NativePointerValue,output:ThumbWriter):void;dispose():void;input:Instruction|null;eob:boolean;eoi:boolean;readOne():number;peekNextWriteInsn():Instruction|null;peekNextWriteSource():NativePointer;skipOne():void;writeOne():boolean;copyOne():boolean;writeAll():void}type ArmRegister=|"r0"|"r1"|"r2"|"r3"|"r4"|"r5"|"r6"|"r7"|"r8"|"r9"|"r10"|"r11"|"r12"|"r13"|"r14"|"r15"|"sp"|"lr"|"sb"|"sl"|"fp"|"ip"|"pc";type ArmSystemRegister="apsr-nzcvq";type ArmConditionCode=|"eq"|"ne"|"hs"|"lo"|"mi"|"pl"|"vs"|"vc"|"hi"|"ls"|"ge"|"lt"|"gt"|"le"|"al";type ArmShifter=|"asr"|"lsl"|"lsr"|"ror"|"rrx"|"asr-reg"|"lsl-reg"|"lsr-reg"|"ror-reg"|"rrx-reg";declare class Arm64Writer{constructor(codeAddress:NativePointerValue,options?:Arm64WriterOptions);reset(codeAddress:NativePointerValue,options?:Arm64WriterOptions):void;dispose():void;flush():void;base:NativePointer;code:NativePointer;pc:NativePointer;offset:number;skip(nBytes:number):void;putLabel(id:string):void;putCallAddressWithArguments(func:NativePointerValue,args:Arm64CallArgument[]):void;putCallRegWithArguments(reg:Arm64Register,args:Arm64CallArgument[]):void;putBranchAddress(address:NativePointerValue):void;canBranchDirectlyBetween(from:NativePointerValue,to:NativePointerValue):boolean;putBImm(address:NativePointerValue):void;putBLabel(labelId:string):void;putBCondLabel(cc:Arm64ConditionCode,labelId:string):void;putBlImm(address:NativePointerValue):void;putBlLabel(labelId:string):void;putBrReg(reg:Arm64Register):void;putBrRegNoAuth(reg:Arm64Register):void;putBlrReg(reg:Arm64Register):void;putBlrRegNoAuth(reg:Arm64Register):void;putRet():void;putCbzRegLabel(reg:Arm64Register,labelId:string):void;putCbnzRegLabel(reg:Arm64Register,labelId:string):void;putTbzRegImmLabel(reg:Arm64Register,bit:number,labelId:string):void;putTbnzRegImmLabel(reg:Arm64Register,bit:number,labelId:string):void;putPushRegReg(regA:Arm64Register,regB:Arm64Register):void;putPopRegReg(regA:Arm64Register,regB:Arm64Register):void;putPushAllXRegisters():void;putPopAllXRegisters():void;putPushAllQRegisters():void;putPopAllQRegisters():void;putLdrRegAddress(reg:Arm64Register,address:NativePointerValue):void;putLdrRegU64(reg:Arm64Register,val:number|UInt64):void;putLdrRegRef(reg:Arm64Register):number;putLdrRegValue(ref:number,value:NativePointerValue):void;putLdrRegRegOffset(dstReg:Arm64Register,srcReg:Arm64Register,srcOffset:number|Int64|UInt64):void;putLdrswRegRegOffset(dstReg:Arm64Register,srcReg:Arm64Register,srcOffset:number|Int64|UInt64):void;putAdrpRegAddress(reg:Arm64Register,address:NativePointerValue):void;putStrRegRegOffset(srcReg:Arm64Register,dstReg:Arm64Register,dstOffset:number|Int64|UInt64):void;putLdpRegRegRegOffset(regA:Arm64Register,regB:Arm64Register,regSrc:Arm64Register,srcOffset:number|Int64|UInt64,mode:Arm64IndexMode):void;putStpRegRegRegOffset(regA:Arm64Register,regB:Arm64Register,regDst:Arm64Register,dstOffset:number|Int64|UInt64,mode:Arm64IndexMode):void;putMovRegReg(dstReg:Arm64Register,srcReg:Arm64Register):void;putUxtwRegReg(dstReg:Arm64Register,srcReg:Arm64Register):void;putAddRegRegImm(dstReg:Arm64Register,leftReg:Arm64Register,rightValue:number|Int64|UInt64):void;putAddRegRegReg(dstReg:Arm64Register,leftReg:Arm64Register,rightReg:Arm64Register):void;putSubRegRegImm(dstReg:Arm64Register,leftReg:Arm64Register,rightValue:number|Int64|UInt64):void;putSubRegRegReg(dstReg:Arm64Register,leftReg:Arm64Register,rightReg:Arm64Register):void;putAndRegRegImm(dstReg:Arm64Register,leftReg:Arm64Register,rightValue:number|Int64|UInt64):void;putTstRegImm(reg:Arm64Register,immValue:number|UInt64):void;putCmpRegReg(regA:Arm64Register,regB:Arm64Register):void;putXpaciReg(reg:Arm64Register):void;putNop():void;putBrkImm(imm:number):void;putInstruction(insn:number):void;putBytes(data:ArrayBuffer|number[]|string):void;sign(value:NativePointerValue):NativePointer}interface Arm64WriterOptions{pc?:NativePointer|undefined}type Arm64CallArgument=Arm64Register|number|UInt64|Int64|NativePointerValue;declare class Arm64Relocator{constructor(inputCode:NativePointerValue,output:Arm64Writer);reset(inputCode:NativePointerValue,output:Arm64Writer):void;dispose():void;input:Instruction|null;eob:boolean;eoi:boolean;readOne():number;peekNextWriteInsn():Instruction|null;peekNextWriteSource():NativePointer;skipOne():void;writeOne():boolean;writeAll():void}type Arm64Register=|"x0"|"x1"|"x2"|"x3"|"x4"|"x5"|"x6"|"x7"|"x8"|"x9"|"x10"|"x11"|"x12"|"x13"|"x14"|"x15"|"x16"|"x17"|"x18"|"x19"|"x20"|"x21"|"x22"|"x23"|"x24"|"x25"|"x26"|"x27"|"x28"|"x29"|"x30"|"w0"|"w1"|"w2"|"w3"|"w4"|"w5"|"w6"|"w7"|"w8"|"w9"|"w10"|"w11"|"w12"|"w13"|"w14"|"w15"|"w16"|"w17"|"w18"|"w19"|"w20"|"w21"|"w22"|"w23"|"w24"|"w25"|"w26"|"w27"|"w28"|"w29"|"w30"|"sp"|"lr"|"fp"|"wsp"|"wzr"|"xzr"|"nzcv"|"ip0"|"ip1"|"s0"|"s1"|"s2"|"s3"|"s4"|"s5"|"s6"|"s7"|"s8"|"s9"|"s10"|"s11"|"s12"|"s13"|"s14"|"s15"|"s16"|"s17"|"s18"|"s19"|"s20"|"s21"|"s22"|"s23"|"s24"|"s25"|"s26"|"s27"|"s28"|"s29"|"s30"|"s31"|"d0"|"d1"|"d2"|"d3"|"d4"|"d5"|"d6"|"d7"|"d8"|"d9"|"d10"|"d11"|"d12"|"d13"|"d14"|"d15"|"d16"|"d17"|"d18"|"d19"|"d20"|"d21"|"d22"|"d23"|"d24"|"d25"|"d26"|"d27"|"d28"|"d29"|"d30"|"d31"|"q0"|"q1"|"q2"|"q3"|"q4"|"q5"|"q6"|"q7"|"q8"|"q9"|"q10"|"q11"|"q12"|"q13"|"q14"|"q15"|"q16"|"q17"|"q18"|"q19"|"q20"|"q21"|"q22"|"q23"|"q24"|"q25"|"q26"|"q27"|"q28"|"q29"|"q30"|"q31";type Arm64ConditionCode=|"eq"|"ne"|"hs"|"lo"|"mi"|"pl"|"vs"|"vc"|"hi"|"ls"|"ge"|"lt"|"gt"|"le"|"al"|"nv";type Arm64IndexMode="post-adjust"|"signed-offset"|"pre-adjust";declare class MipsWriter{constructor(codeAddress:NativePointerValue,options?:MipsWriterOptions);reset(codeAddress:NativePointerValue,options?:MipsWriterOptions):void;dispose():void;flush():void;base:NativePointer;code:NativePointer;pc:NativePointer;offset:number;skip(nBytes:number):void;putLabel(id:string):void;putCallAddressWithArguments(func:NativePointerValue,args:MipsCallArgument[]):void;putCallRegWithArguments(reg:MipsRegister,args:MipsCallArgument[]):void;putJAddress(address:NativePointerValue):void;putJAddressWithoutNop(address:NativePointerValue):void;putJLabel(labelId:string):void;putJrReg(reg:MipsRegister):void;putJalAddress(address:number):void;putJalrReg(reg:MipsRegister):void;putBOffset(offset:number):void;putBeqRegRegLabel(rightReg:MipsRegister,leftReg:MipsRegister,labelId:string):void;putRet():void;putLaRegAddress(reg:MipsRegister,address:NativePointerValue):void;putLuiRegImm(reg:MipsRegister,imm:number):void;putDsllRegReg(dstReg:MipsRegister,srcReg:MipsRegister,amount:number):void;putOriRegRegImm(rt:MipsRegister,rs:MipsRegister,imm:number):void;putLdRegRegOffset(dstReg:MipsRegister,srcReg:MipsRegister,srcOffset:number|Int64|UInt64):void;putLwRegRegOffset(dstReg:MipsRegister,srcReg:MipsRegister,srcOffset:number|Int64|UInt64):void;putSwRegRegOffset(srcReg:MipsRegister,dstReg:MipsRegister,dstOffset:number|Int64|UInt64):void;putMoveRegReg(dstReg:MipsRegister,srcReg:MipsRegister):void;putAdduRegRegReg(dstReg:MipsRegister,leftReg:MipsRegister,rightReg:MipsRegister):void;putAddiRegRegImm(dstReg:MipsRegister,leftReg:MipsRegister,imm:number):void;putAddiRegImm(dstReg:MipsRegister,imm:number):void;putSubRegRegImm(dstReg:MipsRegister,leftReg:MipsRegister,imm:number):void;putPushReg(reg:MipsRegister):void;putPopReg(reg:MipsRegister):void;putMfhiReg(reg:MipsRegister):void;putMfloReg(reg:MipsRegister):void;putMthiReg(reg:MipsRegister):void;putMtloReg(reg:MipsRegister):void;putNop():void;putBreak():void;putPrologueTrampoline(reg:MipsRegister,address:NativePointerValue):void;putInstruction(insn:number):void;putBytes(data:ArrayBuffer|number[]|string):void}interface MipsWriterOptions{pc?:NativePointer|undefined}type MipsCallArgument=MipsRegister|number|UInt64|Int64|NativePointerValue;declare class MipsRelocator{constructor(inputCode:NativePointerValue,output:MipsWriter);reset(inputCode:NativePointerValue,output:MipsWriter):void;dispose():void;input:Instruction|null;eob:boolean;eoi:boolean;readOne():number;peekNextWriteInsn():Instruction|null;peekNextWriteSource():NativePointer;skipOne():void;writeOne():boolean;writeAll():void}type MipsRegister=|"v0"|"v1"|"a0"|"a1"|"a2"|"a3"|"t0"|"t1"|"t2"|"t3"|"t4"|"t5"|"t6"|"t7"|"s0"|"s1"|"s2"|"s3"|"s4"|"s5"|"s6"|"s7"|"t8"|"t9"|"k0"|"k1"|"gp"|"sp"|"fp"|"s8"|"ra"|"hi"|"lo"|"zero"|"at"|"0"|"1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9"|"10"|"11"|"12"|"13"|"14"|"15"|"16"|"17"|"18"|"19"|"20"|"21"|"22"|"23"|"24"|"25"|"26"|"27"|"28"|"29"|"30"|"31";